name: "Workflow Timer"
description: "Worfklow timer..."

runs:
  using: "composite"
  steps:
    - uses: actions/github-script@v6
      id: duration
      with:
        script: |
          const currentTime = new Date().getTime();
          const currentRun = await github.rest.actions.getWorkflowRun({
            owner: context.repo.owner,
            repo: context.repo.repo,
            run_id: context.runId
          });
          const startedAt = currentRun.data.run_started_at
          const currentRunDurationInMillis = currentTime - new Date(startedAt).getTime();
          
          const workflowId = currentRun.data.workflow_id
          const historical_runs = await github.rest.actions.listWorkflowRuns({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: workflowId
          });

          const latestRunsOnMaster = historical_runs.data.workflow_runs.filter( x =>
            (x.head_branch === 'master' || x.head_branch === 'main') &&
            x.status === 'completed' &&
            x.conclusion == 'success'
          );

          const latestRunOnMaster = latestRunsOnMaster[0]
          const latestMasterRunDurationInMillis = new Date(latestRunOnMaster.updated_at).getTime() - new Date(latestRunOnMaster.run_started_at).getTime();
          const diffInSeconds = (currentRunDurationInMillis - latestMasterRunDurationInMillis) / 1000
          const percentageDiff = ((currentRunDurationInMillis/latestMasterRunDurationInMillis) * 100).toFixed(2)
          const outcome = (diffInSeconds > 0) ? "an increase" : "a decrease"
         
          const outputMessage =  'Workflow \"' + context.workflow + '\" took ' +  (currentRunDurationInMillis / 1000) + 's which is ' + outcome + ' with ' + Math.abs(diffInSeconds) + 's (' + Math.abs(percentageDiff) + '%) compared to latest run on master/main.'
 
          console.log(outputMessage)

          github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: outputMessage
          })
